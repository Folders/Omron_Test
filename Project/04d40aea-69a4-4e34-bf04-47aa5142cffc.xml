<CodeEditorModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.DeviceHmi.CodeEditor.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><CodingLanguageName>VBNET</CodingLanguageName><HiddenFooter>&#xD;
End Class</HiddenFooter><HiddenHeader>Partial Public Class Ax_B&#xD;
</HiddenHeader><SerialData i:nil="true"/><SerialDeviceHmiId i:nil="true"/><SerialScaleData i:nil="true"/><Text>'Code behind Page - Add local subroutines for the page.&#xD;
&#xD;
&#xD;
Sub GenMesure&#xD;
	&#xD;
	Dim StepSpeed = (MaxSpeed - 10) / 6&#xD;
	&#xD;
	For ind = 1 To 6&#xD;
		Val_Theo(ind-1) = StepSpeed * ind&#xD;
	Next&#xD;
	&#xD;
End Sub&#xD;
&#xD;
&#xD;
Sub Compute&#xD;
	&#xD;
	Dim avgY As Single&#xD;
	Dim avgX As Single&#xD;
	&#xD;
	Dim dividend As Single&#xD;
	Dim divisor As Single&#xD;
	&#xD;
	' Get average&#xD;
	For i = 0 To 5&#xD;
		avgX = avgX +Val_Real (i)&#xD;
		avgY = avgY + Val_Theo(i)&#xD;
	Next&#xD;
	&#xD;
	avgX = avgX / 6&#xD;
	avgY = avgY / 6&#xD;
&#xD;
	&#xD;
	' Get average&#xD;
	For i = 0 To 5&#xD;
         dividend = dividend + (Val_Real(i) - avgX) * (Val_Theo(i) - avgY)&#xD;
         divisor = divisor + Math.Pow((Val_Real(i) - avgX), 2)&#xD;
	Next&#xD;
	&#xD;
&#xD;
	&#xD;
	Me.L_Out1.Text = dividend / divisor&#xD;
	Me.L_Out2.Text = avgY - (dividend / divisor) * avgX&#xD;
	&#xD;
End Sub&#xD;
</Text></CodeEditorModel>