<CodeEditorModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.DeviceHmi.CodeEditor.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><CodingLanguageName>VBNET</CodingLanguageName><HiddenFooter>&#xD;
End Module</HiddenFooter><HiddenHeader>Public Module S_PopUp&#xD;
</HiddenHeader><SerialData/><SerialDeviceHmiId/><SerialScaleData/><Text>'*************************************************************************************&#xD;
'* 													Popup management&#xD;
'*		Autor:		Pierre Clot&#xD;
'*		Date:		30.05.2022&#xD;
'*		Version: 	3&#xD;
'*&#xD;
'*		Description :&#xD;
'*		Management of recipe system for PCS, with status and text on the header.&#xD;
'*&#xD;
'*		v3: 	Add windows icone&#xD;
'*&#xD;
'*		v2:   Add text box componant if the text as too much line&#xD;
'*		&#xD;
'*		v1: 	Create pop-up windows and scripte. &#xD;
'*&#xD;
'*************************************************************************************&#xD;
&#xD;
#Region "Enumeration of pop-up"&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Specifies identifiers to indicate the return value of a dialog box.&#xD;
''' &lt;/summary&gt;&#xD;
Public Enum DialogResult&#xD;
    None 		' Nothing is returned from the dialog box. This means that the modal dialog is closed&#xD;
    OK			' The dialog box return value is OK&#xD;
    Cancel		' The dialog box return value is Cancel&#xD;
    Abort		' The dialog box return value is Abort&#xD;
    Retry		' The dialog box return value is Retry&#xD;
    Ignore		' The dialog box return value is Ignore&#xD;
	Yes			' The dialog box return value is Yes&#xD;
	No			' The dialog box return value is No&#xD;
End Enum&#xD;
&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Specifies constants defining which buttons to display on a MessageBox.&#xD;
''' &lt;/summary&gt;&#xD;
Public Enum MessageBoxButtons&#xD;
    OK							' The message box contains an OK button.&#xD;
    OKCancel					' The message box contains OK And Cancel buttons.&#xD;
    YesNoCancel			' The message box contains Yes, No, and Cancel buttons.&#xD;
    YesNo						' The message box contains Yes and No buttons.&#xD;
	'RetryCancel				' The message box contains Retry and Cancel buttons.&#xD;
    'AbortRetryIgnore		' The message box contains Abort, Retry, and Ignore buttons.&#xD;
End Enum&#xD;
&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Specifies constants defining which information to display.&#xD;
''' &lt;/summary&gt;&#xD;
Public Enum MessageBoxIcon&#xD;
    None			' The message box contains no symbols.&#xD;
    Erreur			' The message box contains a symbol consisting of white X in a circle with a red background.&#xD;
    Info				' The message box contains a symbol consisting Of a lowercase letter i In a circle.&#xD;
    Question		' The message box contains a symbol consisting of a question mark in a circle.&#xD;
    Success		' The message box contains a symbol consisting of an tick in a circle with a green background.&#xD;
	Warning		' The message box contains a symbol consisting of an exclamation point in a triangle with a yellow background.&#xD;
End Enum&#xD;
&#xD;
#End Region&#xD;
&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Event run when the user choose a response.&#xD;
''' &lt;/summary&gt;&#xD;
Public Event Response(ByVal Value As DialogResult)&#xD;
	&#xD;
''' &lt;summary&gt;&#xD;
''' Call by a custom keypad&#xD;
''' &lt;/summary&gt;&#xD;
Public Event OnEnter(val As String)&#xD;
&#xD;
' Variables for the popup&#xD;
Public Dim _Text As String&#xD;
Public Dim _Caption As String&#xD;
Public Dim _Icon As MessageBoxIcon&#xD;
Public Dim _Buttons As MessageBoxButtons&#xD;
Public Dim _IconWindows As String&#xD;
&#xD;
&#xD;
#Region "MsgBox call function"&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Show pop up message box&#xD;
''' &lt;/summary&gt;&#xD;
''' &lt;param name="text"&gt;Text of message pop-up&lt;/param&gt;	&#xD;
Public Sub MsgBox(text As String)&#xD;
		_MsgBox(text, "", MessageBoxIcon.None, MessageBoxButtons.OK, Nothing)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
'''  Show pop up message box&#xD;
''' &lt;/summary&gt;&#xD;
''' &lt;param name="text"&gt;Text of message pop-up&lt;/param&gt;&#xD;
''' &lt;param name="caption"&gt;Caption of pop-up windows&lt;/param&gt;&#xD;
Public Sub MsgBox(text As String, caption As String)&#xD;
		_MsgBox(text, caption, MessageBoxIcon.None, MessageBoxButtons.OK, Nothing)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Show pop up message box&#xD;
''' &lt;/summary&gt;&#xD;
''' &lt;param name="text"&gt;Text of message pop-up&lt;/param&gt;	&#xD;
''' &lt;param name="icon"&gt;One of the MessageBoxIcon values that specifies which icon to display in the message box.&lt;/param&gt;&#xD;
Public Sub MsgBox(text As String, icon As MessageBoxIcon)&#xD;
		_MsgBox(text, "", icon, MessageBoxButtons.OK, Nothing)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Show pop up message box&#xD;
''' &lt;/summary&gt;&#xD;
''' &lt;param name="text"&gt;Text of message pop-up&lt;/param&gt;&#xD;
''' &lt;param name="caption"&gt;Caption of pop-up windows&lt;/param&gt;&#xD;
''' &lt;param name="icon"&gt;One of the MessageBoxIcon values that specifies which icon to display in the message box.&lt;/param&gt;&#xD;
Public Sub MsgBox(text As String, caption As String, icon As MessageBoxIcon)&#xD;
		_MsgBox(text, caption, icon, MessageBoxButtons.OK, Nothing)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Show pop up message box&#xD;
''' &lt;/summary&gt;&#xD;
''' &lt;param name="text"&gt;Text of message pop-up&lt;/param&gt;	&#xD;
Public Sub MsgBox(text As String, buttons As MessageBoxButtons) &#xD;
		_MsgBox(text, "", MessageBoxIcon.None, buttons, Nothing)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
'''  Show pop up message box&#xD;
''' &lt;/summary&gt;&#xD;
''' &lt;param name="text"&gt;Text of message pop-up&lt;/param&gt;&#xD;
''' &lt;param name="caption"&gt;Caption of pop-up windows&lt;/param&gt;&#xD;
''' &lt;param name="buttons"&gt;One of the MessageBoxButtons values that specifies which buttons to display in the message box.&lt;/param&gt;&#xD;
Public Sub MsgBox(text As String, caption As String, buttons As MessageBoxButtons) &#xD;
		_MsgBox(text, caption, MessageBoxIcon.None, buttons, Nothing)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Show pop up message box&#xD;
''' &lt;/summary&gt;&#xD;
''' &lt;param name="text"&gt;Text of message pop-up&lt;/param&gt;	&#xD;
''' &lt;param name="icon"&gt;One of the MessageBoxIcon values that specifies which icon to display in the message box.&lt;/param&gt;&#xD;
''' &lt;param name="buttons"&gt;One of the MessageBoxButtons values that specifies which buttons to display in the message box.&lt;/param&gt;&#xD;
Public Sub MsgBox(text As String, icon As MessageBoxIcon, buttons As MessageBoxButtons) &#xD;
		_MsgBox(text, "", icon, buttons, Nothing)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Show pop up message box&#xD;
''' &lt;/summary&gt;&#xD;
''' &lt;param name="text"&gt;Text of message pop-up&lt;/param&gt;&#xD;
''' &lt;param name="caption"&gt;Caption of pop-up windows&lt;/param&gt;&#xD;
''' &lt;param name="icon"&gt;One of the MessageBoxIcon values that specifies which icon to display in the message box.&lt;/param&gt;&#xD;
''' &lt;param name="buttons"&gt;One of the MessageBoxButtons values that specifies which buttons to display in the message box.&lt;/param&gt;&#xD;
Public Sub MsgBox(text As String, caption As String, icon As MessageBoxIcon, buttons As MessageBoxButtons) &#xD;
		_MsgBox(text, caption, icon, buttons, Nothing)&#xD;
End Sub&#xD;
&#xD;
&#xD;
' v3: Add windows icone&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
'''  Show pop up message box&#xD;
''' &lt;/summary&gt;&#xD;
''' &lt;param name="text"&gt;Text of message pop-up&lt;/param&gt;&#xD;
''' &lt;param name="caption"&gt;Caption of pop-up windows&lt;/param&gt;&#xD;
''' &lt;param name="iconWindows"&gt;Change the icon of the window with the name of an image resource.&lt;/param&gt;&#xD;
Public Sub MsgBox(text As String, caption As String, iconWindows As Object)&#xD;
		_MsgBox(text, caption, MessageBoxIcon.None, MessageBoxButtons.OK, iconWindows)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Show pop up message box&#xD;
''' &lt;/summary&gt;&#xD;
''' &lt;param name="text"&gt;Text of message pop-up&lt;/param&gt;	&#xD;
''' &lt;param name="icon"&gt;One of the MessageBoxIcon values that specifies which icon to display in the message box.&lt;/param&gt;&#xD;
''' &lt;param name="iconWindows"&gt;Change the icon of the window with the name of an image resource.&lt;/param&gt;&#xD;
Public Sub MsgBox(text As String, icon As MessageBoxIcon, iconWindows As Object)&#xD;
		_MsgBox(text, "", icon, MessageBoxButtons.OK, iconWindows)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Show pop up message box&#xD;
''' &lt;/summary&gt;&#xD;
''' &lt;param name="text"&gt;Text of message pop-up&lt;/param&gt;&#xD;
''' &lt;param name="caption"&gt;Caption of pop-up windows&lt;/param&gt;&#xD;
''' &lt;param name="icon"&gt;One of the MessageBoxIcon values that specifies which icon to display in the message box.&lt;/param&gt;&#xD;
''' &lt;param name="iconWindows"&gt;Change the icon of the window with the name of an image resource.&lt;/param&gt;&#xD;
Public Sub MsgBox(text As String, caption As String, icon As MessageBoxIcon, iconWindows As Object)&#xD;
		_MsgBox(text, caption, icon, MessageBoxButtons.OK, iconWindows)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Show pop up message box&#xD;
''' &lt;/summary&gt;&#xD;
''' &lt;param name="text"&gt;Text of message pop-up&lt;/param&gt;	&#xD;
''' &lt;param name="iconWindows"&gt;Change the icon of the window with the name of an image resource.&lt;/param&gt;&#xD;
Public Sub MsgBox(text As String, buttons As MessageBoxButtons, iconWindows As Object) &#xD;
		_MsgBox(text, "", MessageBoxIcon.None, buttons, iconWindows)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
'''  Show pop up message box&#xD;
''' &lt;/summary&gt;&#xD;
''' &lt;param name="text"&gt;Text of message pop-up&lt;/param&gt;&#xD;
''' &lt;param name="caption"&gt;Caption of pop-up windows&lt;/param&gt;&#xD;
''' &lt;param name="buttons"&gt;One of the MessageBoxButtons values that specifies which buttons to display in the message box.&lt;/param&gt;&#xD;
''' &lt;param name="iconWindows"&gt;Change the icon of the window with the name of an image resource.&lt;/param&gt;&#xD;
Public Sub MsgBox(text As String, caption As String, buttons As MessageBoxButtons, iconWindows As Object)&#xD;
		_MsgBox(text, caption, MessageBoxIcon.None, buttons, iconWindows)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Show pop up message box&#xD;
''' &lt;/summary&gt;&#xD;
''' &lt;param name="text"&gt;Text of message pop-up&lt;/param&gt;	&#xD;
''' &lt;param name="icon"&gt;One of the MessageBoxIcon values that specifies which icon to display in the message box.&lt;/param&gt;&#xD;
''' &lt;param name="buttons"&gt;One of the MessageBoxButtons values that specifies which buttons to display in the message box.&lt;/param&gt;&#xD;
''' &lt;param name="iconWindows"&gt;Change the icon of the window with the name of an image resource.&lt;/param&gt;&#xD;
Public Sub MsgBox(text As String, icon As MessageBoxIcon, buttons As MessageBoxButtons, iconWindows As Object) &#xD;
		_MsgBox(text, "", icon, buttons, iconWindows)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Show pop up message box&#xD;
''' &lt;/summary&gt;&#xD;
''' &lt;param name="text"&gt;Text of message pop-up&lt;/param&gt;&#xD;
''' &lt;param name="caption"&gt;Caption of pop-up windows&lt;/param&gt;&#xD;
''' &lt;param name="icon"&gt;One of the MessageBoxIcon values that specifies which icon to display in the message box.&lt;/param&gt;&#xD;
''' &lt;param name="buttons"&gt;One of the MessageBoxButtons values that specifies which buttons to display in the message box.&lt;/param&gt;&#xD;
''' &lt;param name="iconWindows"&gt;Change the icon of the window with the name of an image resource.&lt;/param&gt;&#xD;
Public Sub MsgBox(text As String, caption As String, icon As MessageBoxIcon, buttons As MessageBoxButtons, iconWindows As Object) &#xD;
		_MsgBox(text, caption, icon, buttons, iconWindows)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Local call of message box&#xD;
''' &lt;/summary&gt;&#xD;
''' &lt;param name="text"&gt;Text of message pop-up&lt;/param&gt;&#xD;
''' &lt;param name="caption"&gt;Caption of pop-up windows&lt;/param&gt;&#xD;
''' &lt;param name="icon"&gt;One of the MessageBoxIcon values that specifies which icon to display in the message box.&lt;/param&gt;&#xD;
''' &lt;param name="buttons"&gt;One of the MessageBoxButtons values that specifies which buttons to display in the message box.&lt;/param&gt;&#xD;
''' &lt;param name="iconWindows"&gt;Change the icon of the window with the name of an image resource.&lt;/param&gt;&#xD;
Private Sub _MsgBox(text As String, caption As String, icon As MessageBoxIcon, buttons As MessageBoxButtons, iconWindows As Object) &#xD;
&#xD;
' Save parameters for the pop-up&#xD;
	_Text = text&#xD;
	_Caption = caption&#xD;
	_Icon = icon&#xD;
	_Buttons = buttons&#xD;
	_IconWindows = CType(iconWindows, String)&#xD;
	&#xD;
	' Show pop-up page&#xD;
	ShowPage("MsgBox")&#xD;
	&#xD;
End Sub&#xD;
&#xD;
#End Region&#xD;
&#xD;
&#xD;
#Region "Respons from MsgBox"&#xD;
&#xD;
Public Sub Press_Yes&#xD;
	ClosePage("MsgBox")&#xD;
	RaiseEvent Response(DialogResult.Yes)&#xD;
End Sub&#xD;
&#xD;
Public Sub Press_No&#xD;
	ClosePage("MsgBox")&#xD;
	RaiseEvent Response(DialogResult.No)&#xD;
End Sub&#xD;
&#xD;
Public Sub Press_Ok&#xD;
	ClosePage("MsgBox")&#xD;
	RaiseEvent Response(DialogResult.Ok)&#xD;
End Sub&#xD;
&#xD;
Public Sub Press_Cancel&#xD;
	ClosePage("MsgBox")&#xD;
	RaiseEvent Response(DialogResult.Cancel)&#xD;
End Sub&#xD;
&#xD;
Public Sub Press_Close&#xD;
	ClosePage("MsgBox")&#xD;
	RaiseEvent Response(DialogResult.None)&#xD;
End Sub&#xD;
&#xD;
#End Region&#xD;
&#xD;
&#xD;
#Region "Popup for inverter" &#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Call pop up window when the teaching of the invertor is done.&#xD;
''' &lt;/summary&gt;&#xD;
Public Sub Inverter_OnTeached&#xD;
	Call MsgBox(GetResourceString("THE_Inverter_Teached"), GetResourceString("THE_Inverter"), MessageBoxIcon.Success,MessageBoxButtons.OK)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Call pop up window when the teaching of the invertor is done.&#xD;
''' &lt;/summary&gt;&#xD;
Public Sub Inverter_OnSave&#xD;
	Call MsgBox(GetResourceString("THE_Inverter_Save"), GetResourceString("THE_Inverter"), MessageBoxIcon.Info,MessageBoxButtons.OK)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Call pop up window when the teaching of the invertor is done.&#xD;
''' &lt;/summary&gt;&#xD;
Public Sub Inverter_OnLoad&#xD;
	Call MsgBox(GetResourceString("THE_Inverter_Load"), GetResourceString("THE_Inverter"), MessageBoxIcon.Success,MessageBoxButtons.OK)&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Call pop up window when the teaching of the invertor is done.&#xD;
''' &lt;/summary&gt;&#xD;
Public Sub Inverter_OnFail&#xD;
	Call MsgBox(GetResourceString("THE_Inverter_Fail"), GetResourceString("THE_Inverter"), MessageBoxIcon.Erreur,MessageBoxButtons.OK)&#xD;
End Sub&#xD;
&#xD;
#End Region</Text></CodeEditorModel>