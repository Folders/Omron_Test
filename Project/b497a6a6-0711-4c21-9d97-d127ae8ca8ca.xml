<CodeEditorModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.DeviceHmi.CodeEditor.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><CodingLanguageName>VBNET</CodingLanguageName><HiddenFooter>&#xD;
End Class</HiddenFooter><HiddenHeader>Partial Public Class TimeSpanKeypad0&#xD;
</HiddenHeader><SerialData i:type="a:string" xmlns:a="http://www.w3.org/2001/XMLSchema">[]</SerialData><SerialDeviceHmiId i:type="a:string" xmlns:a="http://www.w3.org/2001/XMLSchema">[{"t":"System.String","a":"mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089","o":"8b864637-73ac-4429-8a1b-055ed8d4ef63"},{"t":"System.String","a":"mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089","o":"a1f017b8-2dca-488c-8ea3-feb099703e4c"}]</SerialDeviceHmiId><SerialScaleData i:type="a:string" xmlns:a="http://www.w3.org/2001/XMLSchema">[]</SerialScaleData><Text>&#xD;
    #Region "Fields"&#xD;
    Private Dim selectedTextBox As Omron.Hmi.ElementLibrary.NATextBox&#xD;
    #End Region&#xD;
    &#xD;
    #Region "Override Keypad Subroutines"&#xD;
    Protected Overrides Sub InitialiseKeypad()&#xD;
      Dim theTimeSpan As  System.TimeSpan = Me.Value&#xD;
      &#xD;
      Me.Caption.Text = Me.Title&#xD;
      Me.TextBoxMinutes.Text = String.Format(System.Globalization.CultureInfo.CurrentCulture,"{0}", theTimeSpan.Minutes)&#xD;
      Me.TextBoxSeconds.Text = String.Format(System.Globalization.CultureInfo.CurrentCulture,"{0}", theTimeSpan.Seconds)&#xD;
      Me.TextBoxHours.Text = String.Format(System.Globalization.CultureInfo.CurrentCulture,"{0}",theTimeSpan.Hours)&#xD;
      &#xD;
      Me.HourValidation.IsVisible = False&#xD;
      Me.MinuteValidation.IsVisible = False&#xD;
      Me.SecondValidation.IsVisible = False&#xD;
      &#xD;
      Me.TextBoxHours_Release()&#xD;
    End Sub&#xD;
    &#xD;
    Protected Overrides Sub Cancel()&#xD;
       MyBase.Cancel()&#xD;
    End Sub&#xD;
    &#xD;
    Protected Overrides Sub Enter()&#xD;
      Dim newValue = Me.ValidateValue()&#xD;
      &#xD;
      ' If the value being entered is invalid then do not commit the value or close the keypad&#xD;
      If newValue IsNot Nothing Then&#xD;
        Me.Value = newValue&#xD;
        MyBase.Enter()&#xD;
      End If&#xD;
    End Sub&#xD;
    &#xD;
    #End Region&#xD;
    &#xD;
    #Region "Helper Subroutines"&#xD;
    Private Sub SelectAll()&#xD;
      Me.selectedTextBox.SelectionStart = 0&#xD;
      Me.selectedTextBox.SelectionLength = Me.selectedTextBox.Text.Length&#xD;
    End Sub&#xD;
    &#xD;
    Private Function ValidateValue() As Object&#xD;
      &#xD;
      Dim hours As Integer&#xD;
      Dim minutes As Integer&#xD;
      Dim seconds As Integer&#xD;
      Dim valid As Boolean = True&#xD;
      &#xD;
      Try&#xD;
        hours = System.Convert.ToInt32(Me.TextBoxHours.Text, System.Globalization.CultureInfo.CurrentCulture)&#xD;
      Catch ex As System.Exception&#xD;
        Me.HourValidation.IsVisible = True&#xD;
        valid = False&#xD;
      End Try&#xD;
      &#xD;
      Try&#xD;
        minutes = System.Convert.ToInt32(Me.TextBoxMinutes.Text, System.Globalization.CultureInfo.CurrentCulture)&#xD;
      Catch ex As System.Exception&#xD;
        Me.MinuteValidation.IsVisible = True&#xD;
        valid= False&#xD;
      End Try&#xD;
      &#xD;
      Try&#xD;
        seconds = System.Convert.ToInt32(Me.TextBoxSeconds.Text, System.Globalization.CultureInfo.CurrentCulture)&#xD;
      Catch ex As System.Exception&#xD;
        Me.SecondValidation.IsVisible = True
        valid = False&#xD;
      End Try&#xD;
      &#xD;
      If valid Then&#xD;
        Return New TimeSpan(hours, minutes, seconds)&#xD;
      Else&#xD;
        Return Nothing&#xD;
      End If&#xD;
    End Function&#xD;
    &#xD;
    Private Sub ClearValidation()&#xD;
      If Me.HourValidation.IsVisible Then&#xD;
        Me.HourValidation.IsVisible = False&#xD;
      End If&#xD;
      If Me.MinuteValidation.IsVisible Then&#xD;
        Me.MinuteValidation.IsVisible = False&#xD;
      End If&#xD;
      If Me.SecondValidation.IsVisible Then&#xD;
        Me.SecondValidation.IsVisible = False&#xD;
      End If&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub AddNumber(ByVal text As String)&#xD;
      Me.InsertText(text)&#xD;
      Me.ClearValidation()&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub InsertText(ByVal text As String)&#xD;
      Dim start = Me.selectedTextBox.SelectionStart&#xD;
      Dim length = Me.selectedTextBox.SelectionLength&#xD;
      &#xD;
      Me.selectedTextBox.Text = selectedTextBox.Text.Substring(0, start) + text + selectedTextBox.Text.Substring(start + length)&#xD;
      Me.selectedTextBox.SelectionStart = start + 1&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub ClearDisplay()&#xD;
      Me.selectedTextBox.Text = "0"&#xD;
    End Sub&#xD;
    #End Region&#xD;
    &#xD;
    #Region "Subroutines Called from Page Objects"&#xD;
    Private Sub Key0_Release()&#xD;
      If Me.selectedTextBox.Text &lt;&gt; "0" Then&#xD;
        Me.AddNumber(Me.Key0.Text)&#xD;
      End If&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub Key1_Release()&#xD;
      Me.AddNumber(Me.Key1.Text)&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub Key2_Release()&#xD;
      Me.AddNumber(Me.Key2.Text)&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub Key3_Release()&#xD;
      Me.AddNumber(Me.Key3.Text)&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub Key4_Release()&#xD;
      Me.AddNumber(Me.Key4.Text)&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub Key5_Release()&#xD;
      Me.AddNumber(Me.Key5.Text)&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub Key6_Release()&#xD;
      Me.AddNumber(Me.Key6.Text)&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub Key7_Release()&#xD;
      Me.AddNumber(Me.Key7.Text)&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub Key8_Release()&#xD;
      Me.AddNumber(Me.Key8.Text)&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub Key9_Release()&#xD;
      Me.AddNumber(Me.Key9.Text)&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub KeyClear_Release()&#xD;
      Me.ClearDisplay()&#xD;
      Me.ClearValidation()&#xD;
  End Sub&#xD;
    &#xD;
    Private Sub KeyCancel_Release()&#xD;
      Me.Cancel()&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub KeyEnter_Release()&#xD;
      Me.Enter()&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub TextBoxHours_Release()&#xD;
      Me.selectedTextBox = Me.TextBoxHours&#xD;
      Me.SelectAll()&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub TextBoxMinutes_Release()&#xD;
      Me.selectedTextBox = Me.TextBoxMinutes&#xD;
      Me.SelectAll()&#xD;
    End Sub&#xD;
    &#xD;
    Private Sub TextBoxSeconds_Release()&#xD;
      Me.selectedTextBox = Me.TextBoxSeconds&#xD;
      Me.SelectAll()&#xD;
    End Sub&#xD;
    #End Region
  </Text></CodeEditorModel>