<CodeEditorModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.DeviceHmi.CodeEditor.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><CodingLanguageName>VBNET</CodingLanguageName><HiddenFooter>&#xD;
End Class</HiddenFooter><HiddenHeader>Partial Public Class HMI_Apr&#xD;
</HiddenHeader><SerialData i:nil="true"/><SerialDeviceHmiId i:nil="true"/><SerialScaleData i:nil="true"/><Text>'IAG Code behind - Add local subroutines for the IAG.&#xD;
'Code behind Page - Add local subroutines for the page.&#xD;
Dim Offset_left As Integer&#xD;
Dim Offset_right As Integer&#xD;
Dim MyscaleX As Single&#xD;
Dim MyscaleY As Single&#xD;
Dim Height() 'define the height of eatch part&#xD;
Dim Width()  'define the width of eatch part&#xD;
Dim Height_difference() 'define the height difference between one point and the previous&#xD;
Dim Height_non_difference()'define the same height between one point and the previous&#xD;
Dim Width_difference() 'define the width difference between one point and the previous&#xD;
Dim Height_direction()  'define the height direction 1= UP; 2=Down; 3=Egua&#xD;
&#xD;
Dim i As Integer&#xD;
Dim My_LSL_Laser_My_number_of_point As Integer&#xD;
&#xD;
Sub Reset_graphic&#xD;
	Rectangle0.IsVisible= False&#xD;
	Triangle0_1_UP.IsVisible= False&#xD;
	Triangle0_1_Down.IsVisible= False&#xD;
	Rectangle0_1.IsVisible= False&#xD;
	Triangle1_2_UP.IsVisible= False&#xD;
	Triangle1_2_Down.IsVisible= False&#xD;
	Rectangle1_2.IsVisible= False&#xD;
	Triangle2_3_UP.IsVisible= False&#xD;
	Triangle2_3_Down.IsVisible= False&#xD;
	Rectangle2_3.IsVisible= False&#xD;
	Triangle3_4_UP.IsVisible= False&#xD;
	Triangle3_4_Down.IsVisible= False&#xD;
	Rectangle3_4.IsVisible= False&#xD;
	Triangle4_5_UP.IsVisible= False&#xD;
	Triangle4_5_Down.IsVisible= False&#xD;
	Rectangle4_5.IsVisible= False&#xD;
	Triangle5_6_UP.IsVisible= False&#xD;
	Triangle5_6_Down.IsVisible= False&#xD;
	Rectangle5_6.IsVisible= False&#xD;
	Triangle6_7_UP.IsVisible= False&#xD;
	Triangle6_7_Down.IsVisible= False&#xD;
	Rectangle6_7.IsVisible= False&#xD;
	Triangle7_8_UP.IsVisible= False&#xD;
	Triangle7_8_Down.IsVisible= False&#xD;
	Rectangle7_8.IsVisible= False&#xD;
	Triangle8_9_UP.IsVisible= False&#xD;
	Triangle8_9_Down.IsVisible= False&#xD;
	Rectangle8_9.IsVisible= False&#xD;
	Triangle9_10_UP.IsVisible= False&#xD;
	Triangle9_10_Down.IsVisible= False&#xD;
	Rectangle9_10.IsVisible= False&#xD;
	Triangle10_11_UP.IsVisible= False&#xD;
	Triangle10_11_Down.IsVisible= False&#xD;
	Rectangle10_11.IsVisible= False	&#xD;
	Triangle11_12_UP.IsVisible= False&#xD;
	Triangle11_12_Down.IsVisible= False&#xD;
	Rectangle11_12.IsVisible= False&#xD;
	Rectangle12.IsVisible= False&#xD;
	Point_1.IsVisible= False&#xD;
	Point_2.IsVisible= False&#xD;
	Point_3.IsVisible= False&#xD;
	Point_4.IsVisible= False&#xD;
	Point_5.IsVisible= False&#xD;
	Point_6.IsVisible= False&#xD;
	Point_7.IsVisible= False&#xD;
	Point_8.IsVisible= False&#xD;
	Point_9.IsVisible= False&#xD;
	Point_0.IsVisible= False&#xD;
	Visu_IN_0.IsVisible=False&#xD;
	Visu_IN_1.IsVisible=False&#xD;
	Visu_IN_2.IsVisible=False&#xD;
	Visu_IN_3.IsVisible=False&#xD;
	Visu_IN_4.IsVisible=False&#xD;
	Visu_IN_5.IsVisible=False&#xD;
	Visu_IN_6.IsVisible=False&#xD;
	Visu_IN_7.IsVisible=False&#xD;
	Visu_IN_8.IsVisible=False&#xD;
	Visu_IN_9.IsVisible=False&#xD;
	Visu_OUT_0.IsVisible=False&#xD;
	Visu_OUT_1.IsVisible=False&#xD;
	Visu_OUT_2.IsVisible=False&#xD;
	Visu_OUT_3.IsVisible=False&#xD;
	Visu_OUT_4.IsVisible=False&#xD;
	Visu_OUT_5.IsVisible=False&#xD;
	Visu_OUT_6.IsVisible=False&#xD;
	Visu_OUT_7.IsVisible=False&#xD;
	Visu_OUT_8.IsVisible=False&#xD;
	Visu_OUT_9.IsVisible=False&#xD;
&#xD;
End Sub&#xD;
&#xD;
&#xD;
 Sub calculate_0&#xD;
Dim j As Integer&#xD;
	 &#xD;
	'Dim Array&#xD;
	Array.Resize(Height,10)&#xD;
	Array.Resize(Width,10)&#xD;
	Array.Resize(Height_difference,10)&#xD;
	Array.Resize(Height_non_difference,10)&#xD;
	Array.Resize(Width_difference,10)&#xD;
	Array.Resize(Height_direction,10)&#xD;
&#xD;
	For j=0 To 9 	&#xD;
		Height(j)=0&#xD;
		Width(j)=0&#xD;
		Height_difference(j)=0&#xD;
		Height_non_difference(j)=0&#xD;
		Width_difference(j)=0&#xD;
		Height_direction(j)=0&#xD;
	Next&#xD;
	&#xD;
' make all not visible	&#xD;
	Call Reset_graphic()&#xD;
	&#xD;
	'the Graph is 1000 points large is the scale of x axis&#xD;
	MyscaleX=1000/(My_Apr.Param.Limit_X.Max-My_Apr.Param.Limit_X.Min)&#xD;
	&#xD;
	'the Graph is 500 point hight is the scale of y axis&#xD;
	MyscaleY=500/(My_Apr.Param.Limit_Y.Max-My_Apr.Param.Limit_Y.Min)&#xD;
	&#xD;
'define position of all point&#xD;
If My_Apr.Status.NB_point_Used&gt;=2 Then 'only if tha are greater then 2&#xD;
&#xD;
	My_LSL_Laser_My_number_of_point=My_Apr.Status.NB_point_Used-2'for get the good point we need to sub 2 &#xD;
&#xD;
	For i=0 To My_LSL_Laser_My_number_of_point 'loops for points&#xD;
				&#xD;
		Offset_left= My_Apr.Point(0).In*MyscaleX+.05 'ofset in case of the first point is not 0/0 &#xD;
		Width_difference(i)= ((My_Apr.Point(i+1).In -My_Apr.Point(i).In)*MyscaleX)+0.5&#xD;
&#xD;
		If My_Apr.Point(i).Out=My_Apr.Point(i+1).Out Then ' point 0 = point 1&#xD;
				Height_direction(i)=3 'Display only the rectangle&#xD;
				Height_difference(i)=0 'define the heigth of the triangle&#xD;
				Height_non_difference(i)=My_Apr.Point(i).Out*MyscaleY'define the heigth of the rectangle&#xD;
		ElseIf My_Apr.Point(i).Out&gt;My_Apr.Point(i+1).Out Then 'point 0&lt; point 1&#xD;
				Height_direction(i)=2'Display the rectangle and the triangle down&#xD;
				Height_difference(i)=(My_Apr.Point(i).Out-My_Apr.Point(i+1).Out)*MyscaleY'define the heigth of the triangle&#xD;
				Height_non_difference(i)=My_Apr.Point(i+1).Out*MyscaleY'define the heigth of the rectangle&#xD;
		ElseIf My_Apr.Point(i+1).Out&gt;My_Apr.Point(i).Out  Then 'point 0&gt;point 1&#xD;
				Height_direction(i)=1'Display the rectangle and the triangle Up&#xD;
				Height_difference(i)=(My_Apr.Point(i+1).Out-My_Apr.Point(i).Out)*MyscaleY'define the heigth of the triangle&#xD;
				Height_non_difference(i)=My_Apr.Point(i).Out*MyscaleY'define the heigth of the rectangle&#xD;
		End If &#xD;
	Next	&#xD;
End If&#xD;
&#xD;
	If  Height_direction(0)=1 And Width_difference(0)&gt;=0 And (500-Height_non_difference(0)-Height_difference(0)+1)&gt;=0 And Height_non_difference(0)&gt;=0   Then 'set the triangle UP&#xD;
		Triangle1_2_UP.IsVisible= True&#xD;
		Triangle1_2_Up.Left=0+Offset_left' first position at the left&#xD;
		Triangle1_2_UP.Width=Width_difference(0)' the width&#xD;
		Triangle1_2_Up.Top=500-Height_non_difference(0)-Height_difference(0)+1' the start at the top position&#xD;
		Triangle1_2_UP.Height=Height_difference(0) 'the height&#xD;
	End If&#xD;
	'set the triangle DOWN&#xD;
	If  Height_direction(0)=2 And Width_difference(0)&gt;=0 And (500-Height_non_difference(0)-Height_difference(0)+1)&gt;=0  And Height_non_difference(0)&gt;=0  Then 'set the triangle DOWN&#xD;
		Triangle1_2_Down.IsVisible= True&#xD;
		Triangle1_2_Down.Left=0+Offset_left' first position at the left&#xD;
		Triangle1_2_Down.Width=Width_difference(0)' the width&#xD;
		Triangle1_2_Down.Top=500-Height_non_difference(0)-Height_difference(0)+1' the start at the top position&#xD;
		Triangle1_2_Down.Height=Height_difference(0) 'the height&#xD;
	End If&#xD;
	''set the triangle rectangle&#xD;
	If (Height_direction(0) Or Height_direction(0)=2 Or Height_direction(0)=3 )  And  Width_difference(0)&gt;=0 And (500-Height_non_difference(0))&gt;=0 And Height_non_difference(0)&gt;=0 Then&#xD;
		Rectangle1_2.IsVisible= True&#xD;
		Rectangle1_2.Left=0+Offset_left' first position at the left&#xD;
		Rectangle1_2.Width=Width_difference(0)' the width&#xD;
		Rectangle1_2.Top=500-Height_non_difference(0)' the start at the top position&#xD;
		Rectangle1_2.Height=Height_non_difference(0) 'the height&#xD;
	End If	&#xD;
&#xD;
	If  Height_direction(1)=1  And Width_difference(1)&gt;=0 And (500-Height_non_difference(1)-Height_difference(1)+1)&gt;=0 And Height_non_difference(1)&gt;=0 Then 'set the triangle UP&#xD;
		Triangle2_3_UP.IsVisible= True&#xD;
		Triangle2_3_Up.Left=-0.5+Width_difference(0)+Offset_left' first position at the left&#xD;
		Triangle2_3_UP.Width=Width_difference(1)+1' the width&#xD;
		Triangle2_3_Up.Top=500-Height_non_difference(1)-Height_difference(1)+1' the start at the top position&#xD;
		Triangle2_3_UP.Height=Height_difference(1) 'the height&#xD;
	End If&#xD;
'set the triangle DOWN&#xD;
	If  Height_direction(1)=2 And Width_difference(1)&gt;=0 And (500-Height_non_difference(1)-Height_difference(1)+1)&gt;=0  And Height_non_difference(1)&gt;=0 Then 'set the triangle DOWN&#xD;
		Triangle2_3_Down.IsVisible= True&#xD;
		Triangle2_3_Down.Left=-0.5+Width_difference(0)+Offset_left ' first position at the left&#xD;
		Triangle2_3_Down.Width=Width_difference(1)+1' the width&#xD;
		Triangle2_3_Down.Top=500-Height_non_difference(1)-Height_difference(1)+1' the start at the top position&#xD;
		Triangle2_3_Down.Height=Height_difference(1) 'the height&#xD;
	End If&#xD;
'set the triangle rectangle&#xD;
	If (Height_direction(1)=1 Or Height_direction(1)=2 Or Height_direction(1)=3)  And  Width_difference(1)&gt;=0 And (500-Height_non_difference(1))&gt;=0 And Height_non_difference(1)&gt;=0 Then&#xD;
		Rectangle2_3.IsVisible= True&#xD;
		Rectangle2_3.Left=-0.5+Width_difference(0)+Offset_left' first position at the left&#xD;
		Rectangle2_3.Width=Width_difference(1)+1' the width&#xD;
		Rectangle2_3.Top=500-Height_non_difference(1)' the start at the top position&#xD;
		Rectangle2_3.Height=Height_non_difference(1) 'the height&#xD;
	End If&#xD;
&#xD;
	If  Height_direction(2)=1  And Width_difference(2)&gt;=0 And (500-Height_non_difference(2)-Height_difference(2)+1)&gt;=0 And Height_non_difference(2)&gt;=0 Then 'set the triangle UP&#xD;
		Triangle3_4_UP.IsVisible= True&#xD;
		Triangle3_4_Up.Left=-0.5+ Width_difference(0)+Width_difference(1)+Offset_left' first position at the left&#xD;
		Triangle3_4_UP.Width=Width_difference(2)+1' the width&#xD;
		Triangle3_4_Up.Top=500-Height_non_difference(2)-Height_difference(2)+1' the start at the top position&#xD;
		Triangle3_4_UP.Height=Height_difference(2) 'the height&#xD;
	End If&#xD;
	'set the triangle DOWN&#xD;
	If  Height_direction(2)=2 And Width_difference(2)&gt;=0 And (500-Height_non_difference(2)-Height_difference(2)+1)&gt;=0  And Height_non_difference(2)&gt;=0 Then 'set the triangle DOWN&#xD;
		Triangle3_4_Down.IsVisible= True&#xD;
		Triangle3_4_Down.Left=-0.5+Width_difference(0)+Width_difference(1)+Offset_left' first position at the left&#xD;
		Triangle3_4_Down.Width=Width_difference(2)+1' the width&#xD;
		Triangle3_4_Down.Top=500-Height_non_difference(2)-Height_difference(2)+1' the start at the top position&#xD;
		Triangle3_4_Down.Height=Height_difference(2) 'the height&#xD;
	End If&#xD;
	'set the triangle rectangle&#xD;
	If (Height_direction(2)=1 Or Height_direction(2)=2 Or Height_direction(2)=3  ) And  Width_difference(2)&gt;=0 And (500-Height_non_difference(2))&gt;=0 And Height_non_difference(2)&gt;=0 Then&#xD;
		Rectangle3_4.IsVisible= True&#xD;
		Rectangle3_4.Left=-0.5+Width_difference(0)+Width_difference(1)+Offset_left' first position at the left&#xD;
		Rectangle3_4.Width=Width_difference(2)+1' the width&#xD;
		Rectangle3_4.Top=500-Height_non_difference(2)' the start at the top position&#xD;
		Rectangle3_4.Height=Height_non_difference(2) 'the height&#xD;
	End If&#xD;
	&#xD;
	If  Height_direction(3)=1 And Width_difference(3)&gt;=0 And (500-Height_non_difference(3)-Height_difference(3)+1)&gt;=0 And Height_non_difference(3)&gt;=0 Then 'set the triangle UP&#xD;
		Triangle4_5_UP.IsVisible= True&#xD;
		Triangle4_5_Up.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2) +Offset_left' first position at the left&#xD;
		Triangle4_5_UP.Width=Width_difference(3)+1' the width&#xD;
		Triangle4_5_Up.Top=500-Height_non_difference(3)-Height_difference(3)+1' the start at the top position&#xD;
		Triangle4_5_UP.Height=Height_difference(3) 'the height&#xD;
	End If&#xD;
	'set the triangle DOWN&#xD;
	If  Height_direction(3)=2 And Width_difference(3)&gt;=0 And (500-Height_non_difference(3)-Height_difference(3)+1)&gt;=0  And Height_non_difference(3)&gt;=0 Then 'set the triangle DOWN&#xD;
		Triangle4_5_Down.IsVisible= True&#xD;
		Triangle4_5_Down.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Offset_left' first position at the left&#xD;
		Triangle4_5_Down.Width=Width_difference(3)+1' the width&#xD;
		Triangle4_5_Down.Top=500-Height_non_difference(3)-Height_difference(3)+1' the start at the top position&#xD;
		Triangle4_5_Down.Height=Height_difference(3) 'the height&#xD;
	End If&#xD;
	'set the triangle rectangle&#xD;
	If (Height_direction(3)=1 Or Height_direction(3)=2 Or Height_direction(3)=3 )  And  Width_difference(3)&gt;=0 And (500-Height_non_difference(3))&gt;=0 And Height_non_difference(3)&gt;=0 Then&#xD;
		Rectangle4_5.IsVisible= True&#xD;
		Rectangle4_5.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Offset_left' first position at the left&#xD;
		Rectangle4_5.Width=Width_difference(3)+1' the width&#xD;
		Rectangle4_5.Top=500-Height_non_difference(3)' the start at the top position&#xD;
		Rectangle4_5.Height=Height_non_difference(3) 'the height&#xD;
	End If&#xD;
&#xD;
	If  Height_direction(4)=1  And Width_difference(4)&gt;=0 And (500-Height_non_difference(4)-Height_difference(4)+1)&gt;=0 And Height_non_difference(4)&gt;=0 Then 'set the triangle UP&#xD;
		Triangle5_6_UP.IsVisible= True&#xD;
		Triangle5_6_Up.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Offset_left' first position at the left&#xD;
		Triangle5_6_UP.Width=Width_difference(4)+1' the width&#xD;
		Triangle5_6_Up.Top=500-Height_non_difference(4)-Height_difference(4)+1' the start at the top position&#xD;
		Triangle5_6_UP.Height=Height_difference(4) 'the height&#xD;
	End If&#xD;
	'set the triangle DOWN&#xD;
	If  Height_direction(4)=2 And Width_difference(4)&gt;=0 And (500-Height_non_difference(4)-Height_difference(4)+1)&gt;=0  And Height_non_difference(4)&gt;=0 Then 'set the triangle DOWN&#xD;
		Triangle5_6_Down.IsVisible= True&#xD;
		Triangle5_6_Down.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Offset_left' first position at the left&#xD;
		Triangle5_6_Down.Width=Width_difference(4)+1' the width&#xD;
		Triangle5_6_Down.Top=500-Height_non_difference(4)-Height_difference(4)+1' the start at the top position&#xD;
		Triangle5_6_Down.Height=Height_difference(4) 'the height&#xD;
	End If&#xD;
	'set the triangle rectangle&#xD;
	If (Height_direction(4)=1 Or Height_direction(4)=2 Or Height_direction(4)=3)  And  Width_difference(4)&gt;=0 And (500-Height_non_difference(4))&gt;=0 And Height_non_difference(4)&gt;=0 Then&#xD;
		Rectangle5_6.IsVisible= True&#xD;
		Rectangle5_6.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Offset_left' first position at the left&#xD;
		Rectangle5_6.Width=Width_difference(4)+1' the width&#xD;
		Rectangle5_6.Top=500-Height_non_difference(4)' the start at the top position&#xD;
		Rectangle5_6.Height=Height_non_difference(4) 'the height&#xD;
	End If&#xD;
&#xD;
	If  Height_direction(5)=1  And Width_difference(5)&gt;=0 And (500-Height_non_difference(5)-Height_difference(5)+1)&gt;=0 And Height_non_difference(5)&gt;=0Then 'set the triangle UP&#xD;
		Triangle6_7_UP.IsVisible= True&#xD;
		Triangle6_7_Up.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Offset_left' first position at the left&#xD;
		Triangle6_7_UP.Width=Width_difference(5)+1' the width&#xD;
		Triangle6_7_Up.Top=500-Height_non_difference(5)-Height_difference(5)+1' the start at the top position&#xD;
		Triangle6_7_UP.Height=Height_difference(5) 'the height&#xD;
	End If&#xD;
	'set the triangle DOWN&#xD;
	If  Height_direction(5)=2 And Width_difference(5)&gt;=0 And (500-Height_non_difference(5)-Height_difference(5)+1)&gt;=0  And Height_non_difference(5)&gt;=0 Then 'set the triangle DOWN&#xD;
		Triangle6_7_Down.IsVisible= True&#xD;
		Triangle6_7_Down.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Offset_left' first position at the left&#xD;
		Triangle6_7_Down.Width=Width_difference(5)+1' the width&#xD;
		Triangle6_7_Down.Top=500-Height_non_difference(5)-Height_difference(5)+1' the start at the top position&#xD;
		Triangle6_7_Down.Height=Height_difference(5) 'the height&#xD;
	End If&#xD;
'set the triangle rectangle&#xD;
	If (Height_direction(5)=1 Or Height_direction(5)=2 Or Height_direction(5)=3)  And  Width_difference(5)&gt;=0 And (500-Height_non_difference(5))&gt;=0 And Height_non_difference(5)&gt;=0 Then&#xD;
		Rectangle6_7.IsVisible= True&#xD;
		Rectangle6_7.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Offset_left' first position at the left&#xD;
		Rectangle6_7.Width=Width_difference(5)+1' the width&#xD;
		Rectangle6_7.Top=500-Height_non_difference(5)' the start at the top position&#xD;
		Rectangle6_7.Height=Height_non_difference(5) 'the height&#xD;
	End If&#xD;
&#xD;
	If  Height_direction(6)=1 And Width_difference(6)&gt;=0 And (500-Height_non_difference(6)-Height_difference(6)+1)&gt;=0 And Height_non_difference(6)&gt;=0 Then 'set the triangle UP&#xD;
		Triangle7_8_UP.IsVisible= True&#xD;
		Triangle7_8_Up.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Offset_left' first position at the left&#xD;
		Triangle7_8_UP.Width=Width_difference(6)+1' the width&#xD;
		Triangle7_8_Up.Top=500-Height_non_difference(6)-Height_difference(6)+1' the start at the top position&#xD;
		Triangle7_8_UP.Height=Height_difference(6) 'the height&#xD;
	End If&#xD;
	'set the triangle DOWN&#xD;
	If  Height_direction(6)=2 And Width_difference(6)&gt;=0 And (500-Height_non_difference(6)-Height_difference(6)+1)&gt;=0  And Height_non_difference(6)&gt;=0 Then 'set the triangle DOWN&#xD;
		Triangle7_8_Down.IsVisible= True&#xD;
		Triangle7_8_Down.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Offset_left' first position at the left&#xD;
		Triangle7_8_Down.Width=Width_difference(6)+1' the width&#xD;
		Triangle7_8_Down.Top=500-Height_non_difference(6)-Height_difference(6)+1' the start at the top position&#xD;
		Triangle7_8_Down.Height=Height_difference(6) 'the height&#xD;
	End If&#xD;
	'set the triangle rectangle&#xD;
	If (Height_direction(6)=1 Or Height_direction(6)=2 Or Height_direction(6)=3 )  And  Width_difference(6)&gt;=0 And (500-Height_non_difference(6))&gt;=0 And Height_non_difference(6)&gt;=0 Then&#xD;
		Rectangle7_8.IsVisible= True&#xD;
		Rectangle7_8.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Offset_left' first position at the left&#xD;
		Rectangle7_8.Width=Width_difference(6)+1' the width&#xD;
		Rectangle7_8.Top=500-Height_non_difference(6)' the start at the top position&#xD;
		Rectangle7_8.Height=Height_non_difference(6)'the height&#xD;
	End If&#xD;
&#xD;
	If  Height_direction(7)=1 And Width_difference(7)&gt;=0 And (500-Height_non_difference(7)-Height_difference(7)+1)&gt;=0 And Height_non_difference(7)&gt;=0 Then 'set the triangle UP&#xD;
		Triangle8_9_UP.IsVisible= True&#xD;
		Triangle8_9_Up.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Offset_left' first position at the left&#xD;
		Triangle8_9_UP.Width=Width_difference(7)+1' the width&#xD;
		Triangle8_9_Up.Top=500-Height_non_difference(7)-Height_difference(7)+1' the start at the top position&#xD;
		Triangle8_9_UP.Height=Height_difference(7) 'the height&#xD;
	End If&#xD;
	'set the triangle DOWN&#xD;
	If  Height_direction(7)=2 And Width_difference(7)&gt;=0 And (500-Height_non_difference(7)-Height_difference(7)+1)&gt;=0  And Height_non_difference(7)&gt;=0 Then 'set the triangle DOWN&#xD;
		Triangle8_9_Down.IsVisible= True&#xD;
		Triangle8_9_Down.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5) +Width_difference(6)+Offset_left' first position at the left&#xD;
		Triangle8_9_Down.Width=Width_difference(7)+1' the width&#xD;
		Triangle8_9_Down.Top=500-Height_non_difference(7)-Height_difference(7)+1' the start at the top position&#xD;
		Triangle8_9_Down.Height=Height_difference(7) 'the height&#xD;
	End If&#xD;
	'set the triangle rectangle&#xD;
	If (Height_direction(7)=1 Or Height_direction(7)=2 Or Height_direction(7)=3)  And  Width_difference(7)&gt;=0 And (500-Height_non_difference(7))&gt;=0 And Height_non_difference(7)&gt;=0 Then&#xD;
		Rectangle8_9.IsVisible= True&#xD;
		Rectangle8_9.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Offset_left' first position at the left&#xD;
		Rectangle8_9.Width=Width_difference(7)+1' the width&#xD;
		Rectangle8_9.Top=500-Height_non_difference(7)' the start at the top position&#xD;
		Rectangle8_9.Height=Height_non_difference(7) 'the height&#xD;
	End If&#xD;
&#xD;
	If  Height_direction(8)=1 And Width_difference(8)&gt;=0 And (500-Height_non_difference(8)-Height_difference(8)+1)&gt;=0 And Height_non_difference(8)&gt;=0 Then 'set the triangle UP&#xD;
		Triangle9_10_UP.IsVisible= True&#xD;
		Triangle9_10_Up.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Offset_left' first position at the left&#xD;
		Triangle9_10_UP.Width=Width_difference(8)+1' the width&#xD;
		Triangle9_10_Up.Top=500-Height_non_difference(8)-Height_difference(8)+1' the start at the top position&#xD;
		Triangle9_10_UP.Height=Height_difference(8) 'the height&#xD;
	End If&#xD;
	'set the triangle DOWN&#xD;
	If  Height_direction(8)=2 And Width_difference(8)&gt;=0 And (500-Height_non_difference(8)-Height_difference(8)+1)&gt;=0  And Height_non_difference(8)&gt;=0Then 'set the triangle DOWN&#xD;
		Triangle9_10_Down.IsVisible= True&#xD;
		Triangle9_10_Down.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Offset_left' first position at the left&#xD;
		Triangle9_10_Down.Width=Width_difference(8)+1' the width&#xD;
		Triangle9_10_Down.Top=500-Height_non_difference(8)-Height_difference(8)+1' the start at the top position&#xD;
		Triangle9_10_Down.Height=Height_difference(8) 'the height&#xD;
	End If&#xD;
	'set the triangle rectangle&#xD;
	If (Height_direction(8)=1 Or Height_direction(8)=2 Or Height_direction(8)=3) And  Width_difference(8)&gt;=0 And (500-Height_non_difference(8))&gt;=0 And Height_non_difference(8)&gt;=0 Then&#xD;
		Rectangle9_10.IsVisible= True&#xD;
		Rectangle9_10.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Offset_left' first position at the left&#xD;
		Rectangle9_10.Width=Width_difference(8)+1' the width&#xD;
		Rectangle9_10.Top=500-Height_non_difference(8)' the start at the top position&#xD;
		Rectangle9_10.Height=Height_non_difference(8) 'the height&#xD;
	End If&#xD;
&#xD;
	If  Height_direction(9)=1 And Width_difference(9)&gt;=0 And (500-Height_non_difference(9)-Height_difference(9)+1)&gt;=0 And Height_non_difference(9)&gt;=0 Then 'set the triangle UP&#xD;
		Triangle10_11_UP.IsVisible= True&#xD;
		Triangle10_11_Up.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Offset_left' first position at the left&#xD;
		Triangle10_11_UP.Width=Width_difference(9)+1' the width&#xD;
		Triangle10_11_Up.Top=500-Height_non_difference(9)-Height_difference(9)+1' the start at the top position&#xD;
		Triangle10_11_UP.Height=Height_difference(9) 'the height&#xD;
	End If&#xD;
	'set the triangle DOWN&#xD;
	If  Height_direction(9)=2 And Width_difference(9)&gt;=0 And (500-Height_non_difference(9)-Height_difference(9)+1)&gt;=0  And Height_non_difference(9)&gt;=0 Then 'set the triangle DOWN&#xD;
		Triangle10_11_Down.IsVisible= True&#xD;
		Triangle10_11_Down.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Offset_left' first position at the left&#xD;
		Triangle10_11_Down.Width=Width_difference(9)+1' the width&#xD;
		Triangle10_11_Down.Top=500-Height_non_difference(9)-Height_difference(9)+1' the start at the top position&#xD;
		Triangle10_11_Down.Height=Height_difference(9) 'the height&#xD;
	End If&#xD;
	'set the triangle rectangle&#xD;
	If (Height_direction(9)=1 Or Height_direction(9)=2 Or Height_direction(9)=3)  And  Width_difference(9)&gt;=0 And (500-Height_non_difference(9))&gt;=0 And Height_non_difference(9)&gt;=0 Then&#xD;
		Rectangle10_11.IsVisible= True&#xD;
		Rectangle10_11.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Offset_left' first position at the left&#xD;
		Rectangle10_11.Width=Width_difference(9)+1' the width&#xD;
		Rectangle10_11.Top=500-Height_non_difference(9)' the start at the top position&#xD;
		Rectangle10_11.Height=Height_non_difference(9) 'the height&#xD;
	End If&#xD;
&#xD;
&#xD;
	If My_Apr.Param.Lower_behavior=1  Then	&#xD;
			If ( My_Apr.Point(0).Out-My_Apr.Param.Limit_Y.Min)&gt;=0 Then&#xD;
				Rectangle0_1.IsVisible= True&#xD;
				Rectangle0_1.Left=0&#xD;
				Rectangle0_1.Width=Offset_left+0.5&#xD;
				Rectangle0_1.Top=500-(My_Apr.Param.Limit_Y.Min*MyscaleY)&#xD;
				Rectangle0_1.Height=(My_Apr.Param.Limit_Y.Min*MyscaleY)&#xD;
			Else If (My_Apr.Param.Limit_Y.Min- My_Apr.Point(0).Out)&gt;0 Then&#xD;
				Rectangle0_1.IsVisible= True&#xD;
				Rectangle0_1.Left=0&#xD;
				Rectangle0_1.Width=Offset_left+0.5&#xD;
				Rectangle0_1.Top=500-(My_Apr.Point(0).Out*MyscaleY)&#xD;
				Rectangle0_1.Height=(My_Apr.Point(0).Out*MyscaleY)	&#xD;
			Else If 	My_Apr.Point(0).Out=0 Then&#xD;
				Rectangle0_1.IsVisible= False&#xD;
			End If 	&#xD;
	Else If  My_Apr.Param.Lower_behavior=2 Then	&#xD;
				Rectangle0_1.IsVisible= True&#xD;
				Rectangle0_1.Left=0&#xD;
				Rectangle0_1.Width=Offset_left+0.5&#xD;
				Rectangle0_1.Top=500-(My_Apr.Point(0).Out*MyscaleY)&#xD;
				Rectangle0_1.Height=(My_Apr.Point(0).Out*MyscaleY)	&#xD;
	Else If My_Apr.Param.Lower_behavior=3 Then	&#xD;
			If ( My_Apr.Point(0).Out-My_Apr.Status.Value_min_for_X)&gt;=0 Then&#xD;
				Rectangle0_1.IsVisible= True&#xD;
				Rectangle0_1.Left=My_Apr.Status.Value_A_for_min*MyscaleX&#xD;
				Rectangle0_1.Width=Offset_left-My_Apr.Status.Value_A_for_min*MyscaleX+0.5&#xD;
				Rectangle0_1.Top=500-(My_Apr.Status.Value_min_for_X*MyscaleY)&#xD;
				Rectangle0_1.Height=(My_Apr.Status.Value_min_for_X*MyscaleY)&#xD;
			Else If (My_Apr.Status.Value_min_for_X- My_Apr.Point(0).Out)&gt;0 Then&#xD;
				Rectangle0_1.IsVisible= True&#xD;
				Rectangle0_1.Left=0&#xD;
				Rectangle0_1.Width=Offset_left+0.5&#xD;
				Rectangle0_1.Top=500-(My_Apr.Point(0).Out*MyscaleY)&#xD;
				Rectangle0_1.Height=(My_Apr.Point(0).Out*MyscaleY)	&#xD;
			Else If 	My_Apr.Point(0).Out=0 Then&#xD;
				Rectangle0_1.IsVisible= False&#xD;
			End If 	&#xD;
	End If 	&#xD;
	&#xD;
	If My_Apr.Param.Lower_behavior=1  Then&#xD;
&#xD;
			If ( My_Apr.Point(0).Out-My_Apr.Param.Limit_Y.Min)&gt;0 Then	&#xD;
				Triangle0_1_UP.IsVisible= True&#xD;
				Triangle0_1_Up.Left=0		&#xD;
				Triangle0_1_UP.Width=Offset_left+0.5&#xD;
				Triangle0_1_Up.Top=500-( My_Apr.Param.Limit_Y.Min*MyscaleY)-((My_Apr.Point(0).Out- My_Apr.Param.Limit_Y.Min)*MyscaleY)&#xD;
				Triangle0_1_UP.Height=(My_Apr.Point(0).Out- My_Apr.Param.Limit_Y.Min)*MyscaleY&#xD;
			Else If (My_Apr.Param.Limit_Y.Min-My_Apr.Point(0).Out)&gt;=0 Then	&#xD;
		 		Triangle0_1_Up.IsVisible= False		&#xD;
			End If &#xD;
			If (My_Apr.Param.Limit_Y.Min- My_Apr.Point(0).Out)&gt;0  Then&#xD;
				Triangle0_1_Down.IsVisible= True&#xD;
				If My_Apr.Status.Value_A_for_min&gt;0 And  My_Apr.Status.Value_A_for_min&lt; My_Apr.Point(0).IN					&#xD;
					Triangle0_1_Down.Left=0+My_Apr.Status.Value_A_for_min*MyscaleX&#xD;
					Triangle0_1_Down.Width=Offset_left+0.5-My_Apr.Status.Value_A_for_min*MyscaleX&#xD;
				Else&#xD;
					Triangle0_1_Down.Left=0&#xD;
					Triangle0_1_Down.Width=Offset_left+0.5&#xD;
				End If					&#xD;
				Triangle0_1_Down.Top=500-( My_Apr.Point(0).Out*MyscaleY)-((My_Apr.Param.Limit_Y.Min-My_Apr.Point(0).Out)*MyscaleY)&#xD;
				Triangle0_1_Down.Height=(My_Apr.Param.Limit_Y.Min-My_Apr.Point(0).Out)*MyscaleY	&#xD;
			End If 	&#xD;
	End If	&#xD;
		If My_Apr.Param.Lower_behavior=3  Then&#xD;
			If ( My_Apr.Point(0).Out-My_Apr.Status.Value_min_for_X)&gt;0 Then	&#xD;
				Triangle0_1_UP.IsVisible= True&#xD;
				Triangle0_1_Up.Left=My_Apr.Status.Value_A_for_min*MyscaleX&#xD;
				Triangle0_1_UP.Width=Offset_left-My_Apr.Status.Value_A_for_min*MyscaleX+0.5&#xD;
				Triangle0_1_Up.Top=500-( My_Apr.Status.Value_min_for_X*MyscaleY)-((My_Apr.Point(0).Out- My_Apr.Status.Value_min_for_X)*MyscaleY)&#xD;
				Triangle0_1_UP.Height=(My_Apr.Point(0).Out-My_Apr.Status.Value_min_for_X)*MyscaleY+0.5&#xD;
			Else If (My_Apr.Param.Limit_Y.Min-My_Apr.Point(0).Out)&gt;=0 Then	&#xD;
		 		Triangle0_1_Up.IsVisible= False		&#xD;
			End If &#xD;
			If (My_Apr.Status.Value_min_for_X- My_Apr.Point(0).Out)&gt;0  Then&#xD;
				Triangle0_1_Down.IsVisible= True&#xD;
				Triangle0_1_Down.Left=My_Apr.Status.Value_A_for_min*MyscaleX&#xD;
				Triangle0_1_Down.Width=Offset_left-My_Apr.Status.Value_A_for_min*MyscaleX+0.5&#xD;
				Triangle0_1_Down.Top=500-( My_Apr.Point(0).Out*MyscaleY)-((My_Apr.Status.Value_min_for_X-My_Apr.Point(0).Out)*MyscaleY)&#xD;
				Triangle0_1_Down.Height=(My_Apr.Status.Value_min_for_X-My_Apr.Point(0).Out)*MyscaleY	&#xD;
			End If 	&#xD;
	End If	&#xD;
	&#xD;
	&#xD;
&#xD;
'		Triangle10_11_Up.Top=500-Height_non_difference(9)-Height_difference(9)+1' the start at the top position&#xD;
&#xD;
If My_Apr.Param.Upper_behavior=1 Or My_Apr.Param.Upper_behavior=2 Then&#xD;
	offset_right=(My_Apr.Param.Limit_X.Max*MyscaleX) -(-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Width_difference(9)+Offset_left)' first position at the left&#xD;
Else If My_Apr.Param.Upper_behavior=3 Then&#xD;
	If (My_Apr.Param.Limit_X.Max -  My_Apr.Status.Value_A_for_max)&gt;=0 Then&#xD;
	&#xD;
		offset_right=(My_Apr.Status.Value_A_for_max*MyscaleX) -(-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Width_difference(9)+Offset_left)+1.0' first position at the left&#xD;
	Else&#xD;
		offset_right=(My_Apr.Param.Limit_X.Max*MyscaleX) -(-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Width_difference(9)+Offset_left)+1.0' first position at the left&#xD;
	End If&#xD;
&#xD;
End If&#xD;
&#xD;
If My_Apr.Point(My_Apr.Status.NB_point_Used-1).IN &lt; My_Apr.Param.Limit_X.Max Then&#xD;
			If My_Apr.Param.Upper_behavior=1  And My_Apr.Status.NB_point_Used&gt;=1 Then&#xD;
					If ( My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out-My_Apr.Param.Limit_Y.Max) &gt;=0 Then&#xD;
							Rectangle11_12.IsVisible= True&#xD;
							Rectangle11_12.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Width_difference(9)+Offset_left' first position at the left&#xD;
							Rectangle11_12.Width=offset_right&#xD;
							Rectangle11_12.Top=500-(My_Apr.Param.Limit_Y.Max*MyscaleY)&#xD;
							Rectangle11_12.Height=(My_Apr.Param.Limit_Y.Max*MyscaleY)&#xD;
					Else If (My_Apr.Param.Limit_Y.Max- My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out)&gt;0 Then&#xD;
							Rectangle11_12.IsVisible= True&#xD;
							Rectangle11_12.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Width_difference(9)+Offset_left' first position at the left&#xD;
							Rectangle11_12.Width=offset_right&#xD;
							Rectangle11_12.Top=500-(My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out*MyscaleY)&#xD;
							Rectangle11_12.Height=(My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out*MyscaleY)&#xD;
					Else If 	My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out=0 Then&#xD;
							Rectangle11_12.IsVisible= False&#xD;
					End If 	&#xD;
			Else If  My_Apr.Param.Upper_behavior=2 Then	&#xD;
					Rectangle11_12.IsVisible= True&#xD;
					Rectangle11_12.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Width_difference(9)+Offset_left' first position at the left&#xD;
					Rectangle11_12.Width=offset_right&#xD;
					Rectangle11_12.Top=500-(My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out*MyscaleY)&#xD;
					Rectangle11_12.Height=(My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out*MyscaleY)&#xD;
			Else If My_Apr.Param.Upper_behavior=3  And My_Apr.Status.NB_point_Used&gt;=1 Then	&#xD;
					If ( My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out-My_Apr.Status.Value_max_for_X) &gt;=0 Then&#xD;
							Rectangle11_12.IsVisible= True&#xD;
							Rectangle11_12.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Width_difference(9)+Offset_left' first position at the left&#xD;
							Rectangle11_12.Width=offset_right&#xD;
							Rectangle11_12.Top=500-(My_Apr.Status.Value_max_for_X*MyscaleY)&#xD;
							Rectangle11_12.Height=(My_Apr.Status.Value_max_for_X*MyscaleY)&#xD;
&#xD;
					Else If (My_Apr.Status.Value_max_for_X- My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out)&gt;0 Then&#xD;
							Rectangle11_12.IsVisible= True&#xD;
							Rectangle11_12.Left=-1+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Width_difference(9)+Offset_left' first position at the left&#xD;
							Rectangle11_12.Width=offset_right+0.5&#xD;
							Rectangle11_12.Top=500-(My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out*MyscaleY)&#xD;
							Rectangle11_12.Height=(My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out*MyscaleY)&#xD;
				&#xD;
					Else If 	My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out=0 Then&#xD;
							Rectangle11_12.IsVisible= False&#xD;
					End If 					&#xD;
			Else If	My_Apr.Param.Upper_behavior=0 Then&#xD;
					Rectangle11_12.IsVisible= False	&#xD;
			End If 	&#xD;
		End If&#xD;
	If My_Apr.Param.Upper_behavior=1   And My_Apr.Status.NB_point_Used&gt;=1 Then&#xD;
			If ( My_Apr.Param.Limit_Y.Max-My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out)&gt;0 And My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out&gt;0  Then	&#xD;
				Triangle11_12_UP.IsVisible= True&#xD;
				Triangle11_12_Up.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Width_difference(9)+Offset_left' first position at the left&#xD;
				Triangle11_12_UP.Width=offset_right&#xD;
				Triangle11_12_Up.Top=500-(My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out*MyscaleY)-((My_Apr.Param.Limit_Y.Max - My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out )*MyscaleY)&#xD;
				Triangle11_12_UP.Height=(My_Apr.Param.Limit_Y.Max - My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out)*MyscaleY+1.0&#xD;
			End If &#xD;
			If ( My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out - My_Apr.Param.Limit_Y.Max)&gt;0  Then&#xD;
				Triangle11_12_Down.IsVisible= True&#xD;
				Triangle11_12_Down.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Width_difference(9)+Offset_left' first position at the left&#xD;
				Triangle11_12_Down.Width=offset_right&#xD;
				Triangle11_12_Down.Top=500-( My_Apr.Param.Limit_Y.Max*MyscaleY)-((My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out - My_Apr.Param.Limit_Y.Max)*MyscaleY)&#xD;
				Triangle11_12_Down.Height=(My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out - My_Apr.Param.Limit_Y.Max)*MyscaleY 	+1.0&#xD;
			Else &#xD;
				Triangle11_12_Down.IsVisible= False		&#xD;
			End If 	&#xD;
	Else If My_Apr.Param.Upper_behavior=3   And My_Apr.Status.NB_point_Used&gt;=1  Then&#xD;
	&#xD;
		If ( My_Apr.Status.Value_max_for_X-My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out)&gt;0 And My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out&gt;0  Then	&#xD;
				Triangle11_12_UP.IsVisible= True&#xD;
				Triangle11_12_Up.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Width_difference(9)+Offset_left' first position at the left&#xD;
				Triangle11_12_UP.Width=offset_right&#xD;
				Triangle11_12_Up.Top=500-(My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out*MyscaleY)-((My_Apr.Status.Value_max_for_X - My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out )*MyscaleY)&#xD;
				Triangle11_12_UP.Height=(My_Apr.Status.Value_max_for_X - My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out)*MyscaleY+1.0&#xD;
&#xD;
			End If &#xD;
			If ( My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out - My_Apr.Status.Value_max_for_X)&gt;0  Then&#xD;
				Triangle11_12_Down.IsVisible= True&#xD;
				Triangle11_12_Down.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Width_difference(9)+Offset_left' first position at the left&#xD;
				Triangle11_12_Down.Width=offset_right&#xD;
				Triangle11_12_Down.Top=500-( My_Apr.Status.Value_max_for_X*MyscaleY)-((My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out - My_Apr.Status.Value_max_for_X)*MyscaleY)&#xD;
				Triangle11_12_Down.Height=(My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out -My_Apr.Status.Value_max_for_X)*MyscaleY 	&#xD;
&#xD;
			Else &#xD;
				Triangle11_12_Down.IsVisible= False		&#xD;
			End If 	&#xD;
&#xD;
	Else If My_Apr.Status.NB_point_Used&gt;=2 And My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out=My_Apr.Point(My_Apr.Status.NB_point_Used-2).Out  Then			&#xD;
	 	Triangle11_12_Up.IsVisible= False			&#xD;
		Triangle11_12_Down.IsVisible= False					&#xD;
	Else&#xD;
	 	Triangle11_12_Up.IsVisible= False			&#xD;
		Triangle11_12_Down.IsVisible= False			&#xD;
	End If	&#xD;
	&#xD;
			If (My_Apr.Point(1).Used= True) Then	&#xD;
				If (My_Apr.Status.Value_A_for_max&lt;&gt;0) And (My_Apr.Status.Value_A_for_max &lt; My_Apr.Param.Limit_X.Max) And (My_Apr.Point(My_Apr.Status.NB_point_Used-1).Out&gt;My_Apr.Point(My_Apr.Status.NB_point_Used-2).Out)   Then&#xD;
							Rectangle12.IsVisible=True&#xD;
							Rectangle12.Left=-2.0+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Width_difference(9)+Offset_left+offset_right&#xD;
							Rectangle12.Width=1000-(-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Width_difference(9)+Offset_left+offset_right)&#xD;
							Rectangle12.Top=0&#xD;
							Rectangle12.Height=500&#xD;
				End If			&#xD;
			Else&#xD;
					Rectangle12.IsVisible=False&#xD;
			End If			&#xD;
&#xD;
					If(My_Apr.Point(1).Used= True) And  (My_Apr.Status.Value_A_for_min&lt;&gt;0) And (My_Apr.Status.Value_A_for_min &gt; My_Apr.Param.Limit_X.Min) And (My_Apr.Point(0).Out&gt;My_Apr.Point(1).Out)   Then&#xD;
							Rectangle0.IsVisible=True&#xD;
							Rectangle0.Left=0&#xD;
							Rectangle0.Width= My_Apr.Status.Value_A_for_min * MyscaleX&#xD;
							Rectangle0.Top=0&#xD;
							Rectangle0.Height=500&#xD;
						Else 	&#xD;
							Rectangle0.IsVisible=False							&#xD;
						End If&#xD;
							&#xD;
			&#xD;
			&#xD;
			&#xD;
			&#xD;
			&#xD;
	&#xD;
	If My_Apr.Point(0).Used =True Then&#xD;
		Call Display_Point_0()	&#xD;
	End If&#xD;
	If My_Apr.Point(1).Used=True Then&#xD;
		Call Display_Point_1()&#xD;
	End If&#xD;
	If My_Apr.Point(2).Used=True Then&#xD;
		Call Display_Point_2()	&#xD;
	End If&#xD;
	If My_Apr.Point(3).Used=True Then&#xD;
		Call Display_Point_3()&#xD;
	End If&#xD;
	If My_Apr.Point(4).Used=True Then&#xD;
		Call Display_Point_4()&#xD;
	End If&#xD;
	If My_Apr.Point(5).Used=True Then&#xD;
		Call Display_Point_5()&#xD;
	End If&#xD;
	If My_Apr.Point(6).Used=True Then&#xD;
		Call Display_Point_6()&#xD;
	End If&#xD;
	If My_Apr.Point(7).Used=True Then&#xD;
		Call Display_Point_7()&#xD;
	End If&#xD;
	If My_Apr.Point(8).Used=True Then&#xD;
		 Call Display_Point_8()	&#xD;
	End If&#xD;
	If My_Apr.Point(9).Used=True Then&#xD;
		Call Display_Point_9()&#xD;
	End If&#xD;
	If My_Apr.Cmd.Delete_Offset&lt;&gt;0 Then&#xD;
		Call Position_popup_delete()	&#xD;
	End If&#xD;
	&#xD;
	&#xD;
	&#xD;
	My_Apr.Cmd.Update_graph=False&#xD;
	&#xD;
End Sub&#xD;
&#xD;
Sub Display_Point_0&#xD;
	Point_0.IsVisible=True&#xD;
	Point_0.Left=0+Offset_left-10' first position at the left	&#xD;
	Point_0.Top=500-( My_Apr.Param.Limit_Y.Min*MyscaleY)-((My_Apr.Point(0).Out- My_Apr.Param.Limit_Y.Min)*MyscaleY)-10&#xD;
	Visu_OUT_0.IsVisible=True&#xD;
	Visu_IN_0.IsVisible=True&#xD;
	Visu_IN_0.Left=Point_0.left+60&#xD;
	Visu_OUT_0.Top=Point_0.Top&#xD;
End Sub&#xD;
&#xD;
&#xD;
Sub Display_Point_1&#xD;
	Point_1.IsVisible=True&#xD;
	Point_1.Left=-0.5+Width_difference(0)+Offset_left-10' first position at the left&#xD;
	Visu_OUT_1.IsVisible=True&#xD;
	Visu_IN_1.IsVisible=True&#xD;
	Visu_IN_1.Left=Point_1.Left+60&#xD;
	Visu_OUT_1.Top=Point_1.Top&#xD;
	If Height_direction(0)= 1 Then&#xD;
		Point_1.Top=500-Height_non_difference(0)-Height_difference(0)+1-10&#xD;
	End If&#xD;
	If Height_direction(0)=3 Or Height_direction(0)=2 Then&#xD;
		Point_1.Top=500-Height_non_difference(0)+1-10&#xD;
	End If&#xD;
End Sub&#xD;
&#xD;
&#xD;
Sub Display_Point_2&#xD;
	Point_2.IsVisible=True&#xD;
	Point_2.Left=-0.5+Width_difference(0)+Width_difference(1)+Offset_left-10' first position at the left&#xD;
	Visu_OUT_2.IsVisible=True&#xD;
	Visu_IN_2.IsVisible=True&#xD;
	Visu_IN_2.Left=Point_2.Left+60&#xD;
	Visu_OUT_2.Top=Point_2.Top	&#xD;
	If Height_direction(1)= 1 Then	&#xD;
		Point_2.Top=500-Height_non_difference(1)-Height_difference(1)+1-10&#xD;
	End If		&#xD;
	If Height_direction(1)=3 Or Height_direction(1)=2 Then&#xD;
		Point_2.Top=500-Height_non_difference(1)+1-10&#xD;
	End If	&#xD;
End Sub&#xD;
&#xD;
&#xD;
Sub Display_Point_3&#xD;
	Point_3.IsVisible=True&#xD;
	Point_3.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Offset_left-10' first position at the left	&#xD;
	Visu_OUT_3.IsVisible=True&#xD;
	Visu_IN_3.IsVisible=True&#xD;
	Visu_IN_3.Left=Point_3.Left+60&#xD;
	Visu_OUT_3.Top=Point_3.Top	&#xD;
	If Height_direction(2)= 1 Then	&#xD;
		Point_3.Top=500-Height_non_difference(2)-Height_difference(2)+1-10&#xD;
	End If&#xD;
	If Height_direction(2)=3 Or Height_direction(2)=2 Then	&#xD;
		Point_3.Top=500-Height_non_difference(2)+1-10&#xD;
	End If	&#xD;
End Sub&#xD;
&#xD;
Sub Display_Point_4&#xD;
	Point_4.IsVisible=True&#xD;
	Point_4.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Offset_left-10' first position at the left	&#xD;
	Visu_OUT_4.IsVisible=True&#xD;
	Visu_IN_4.IsVisible=True&#xD;
	Visu_IN_4.Left=Point_4.Left+60&#xD;
	Visu_OUT_4.Top=Point_4.Top	&#xD;
	If Height_direction(3)= 1 Then		&#xD;
		Point_4.Top=500-Height_non_difference(3)-Height_difference(3)+1-10&#xD;
	End  If&#xD;
	If Height_direction(3)=3 Or Height_direction(3)=2 Then	&#xD;
		Point_4.Top=500-Height_non_difference(3)+1-10&#xD;
	End  If&#xD;
End Sub &#xD;
&#xD;
Sub Display_Point_5&#xD;
	Point_5.IsVisible=True&#xD;
	Point_5.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Offset_left-10' first position at the left&#xD;
	Visu_OUT_5.IsVisible=True&#xD;
	Visu_IN_5.IsVisible=True&#xD;
	Visu_IN_5.Left=Point_5.Left+60&#xD;
	Visu_OUT_5.Top=Point_5.Top			&#xD;
	If Height_direction(4)= 1 Then	&#xD;
		Point_5.Top=500-Height_non_difference(4)-Height_difference(4)+1-10&#xD;
	End  If		&#xD;
	If Height_direction(4)= 3 Or Height_direction(4)= 2 Then	&#xD;
		Point_5.Top=500-Height_non_difference(4)+1-10&#xD;
	End  If		&#xD;
End Sub&#xD;
&#xD;
Sub Display_Point_6&#xD;
	Point_6.IsVisible=True&#xD;
	Point_6.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Offset_left-10' first position at the left	&#xD;
	Visu_OUT_6.IsVisible=True&#xD;
	Visu_IN_6.IsVisible=True&#xD;
	Visu_IN_6.Left=Point_6.Left+60&#xD;
	Visu_OUT_6.Top=Point_6.Top		&#xD;
	If Height_direction(5)= 1 Then	&#xD;
		Point_6.Top=500-Height_non_difference(5)-Height_difference(5)+1-10&#xD;
	End  If	&#xD;
	If Height_direction(5)= 3 Or Height_direction(5)= 2 Then	&#xD;
		Point_6.Top=500-Height_non_difference(5)+1-10&#xD;
	End  If		&#xD;
End Sub&#xD;
&#xD;
&#xD;
Sub Display_Point_7&#xD;
	Point_7.IsVisible=True&#xD;
	Point_7.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Offset_left-10' first position at the left	&#xD;
	Visu_OUT_7.IsVisible=True&#xD;
	Visu_IN_7.IsVisible=True&#xD;
	Visu_IN_7.Left=Point_7.Left+60&#xD;
	Visu_OUT_7.Top=Point_7.Top	&#xD;
	If Height_direction(6)= 1 Then	&#xD;
		Point_7.Top=500-Height_non_difference(6)-Height_difference(6)+1-10&#xD;
	End  If	&#xD;
	If Height_direction(6)= 3 Or Height_direction(6)= 2 Then	&#xD;
		Point_7.Top=500-Height_non_difference(6)+1-10&#xD;
	End  If		&#xD;
End Sub&#xD;
&#xD;
Sub Display_Point_8&#xD;
	Point_8.IsVisible=True&#xD;
	Point_8.Left=-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Offset_left-10' first position at the left&#xD;
	Visu_OUT_8.IsVisible=True&#xD;
	Visu_IN_8.IsVisible=True&#xD;
	Visu_IN_8.Left=Point_8.Left+60&#xD;
	Visu_OUT_8.Top=Point_8.Top	&#xD;
	If Height_direction(7)= 1 Then	&#xD;
		Point_8.Top=500-Height_non_difference(7)-Height_difference(7)+1-10&#xD;
	End  If	&#xD;
	If Height_direction(7)= 3 Or Height_direction(7)= 2 Then	&#xD;
		Point_8.Top=500-Height_non_difference(7)+1-10&#xD;
	End  If	&#xD;
End Sub&#xD;
&#xD;
Sub Display_Point_9&#xD;
	Point_9.IsVisible=True&#xD;
	Point_9.Left=0-0.5+Width_difference(0)+Width_difference(1)+Width_difference(2)+Width_difference(3)+Width_difference(4)+Width_difference(5)+Width_difference(6)+Width_difference(7)+Width_difference(8)+Offset_left-10' first position at the left' first position at the left	&#xD;
	Visu_OUT_9.IsVisible=True&#xD;
	Visu_IN_9.IsVisible=True&#xD;
	Visu_IN_9.Left=Point_9.Left	+60&#xD;
	Visu_OUT_9.Top=Point_9.Top	&#xD;
	If Height_direction(8)= 1 Then	&#xD;
		Point_9.Top=500-Height_non_difference(8)-Height_difference(8)+1-10&#xD;
	End  If&#xD;
	If Height_direction(8)= 3  Or Height_direction(8)= 2 Then	&#xD;
		Point_9.Top=500-Height_non_difference(8)+1-10&#xD;
	End  If		&#xD;
End Sub	&#xD;
&#xD;
Sub Position_popup_delete&#xD;
	&#xD;
	&#xD;
	Dim Shift_left As Integer =+150&#xD;
	Dim Shift_right As Integer =-200&#xD;
&#xD;
	If My_Apr.Cmd.Delete_Offset=1 Then&#xD;
			If Point_1.Left&lt;=400 Then&#xD;
				Popup_Delete.Left=Point_1.Left+Shift_left&#xD;
				Popup_delete.Top=100&#xD;
			Else&#xD;
				Popup_Delete.Left=Point_1.Left+Shift_right&#xD;
				Popup_delete.Top=100				&#xD;
			End If	&#xD;
	Else If My_Apr.Cmd.Delete_Offset=2 Then&#xD;
			If Point_2.Left&lt;=400 Then&#xD;
				Popup_Delete.Left=Point_2.Left+Shift_left&#xD;
				Popup_delete.Top=100&#xD;
			Else&#xD;
				Popup_Delete.Left=Point_2.Left+Shift_right&#xD;
				Popup_delete.Top=100				&#xD;
			End If			&#xD;
	Else If My_Apr.Cmd.Delete_Offset=3 Then&#xD;
			If Point_3.Left&lt;=400 Then&#xD;
				Popup_Delete.Left=Point_3.Left+Shift_left&#xD;
				Popup_delete.Top=100				&#xD;
			Else&#xD;
				Popup_Delete.Left=Point_3.Left+Shift_right&#xD;
				Popup_delete.Top=100				&#xD;
			End If			&#xD;
	Else If My_Apr.Cmd.Delete_Offset=4 Then&#xD;
			If Point_4.Left&lt;=400 Then&#xD;
				Popup_Delete.Left=Point_4.Left+Shift_left&#xD;
				Popup_delete.Top=100				&#xD;
			Else&#xD;
				Popup_Delete.Left=Point_4.Left+Shift_right&#xD;
				Popup_delete.Top=100				&#xD;
			End If	&#xD;
	Else If My_Apr.Cmd.Delete_Offset=5 Then&#xD;
			If Point_5.Left&lt;=400 Then&#xD;
				Popup_Delete.Left=Point_5.Left+Shift_left&#xD;
				Popup_delete.Top=100				&#xD;
			Else&#xD;
				Popup_Delete.Left=Point_5.Left+Shift_right&#xD;
				Popup_delete.Top=100				&#xD;
			End If	&#xD;
	Else If My_Apr.Cmd.Delete_Offset=6 Then&#xD;
			If Point_6.Left&lt;=400 Then&#xD;
				Popup_Delete.Left=Point_6.Left+Shift_left&#xD;
				Popup_delete.Top=100				&#xD;
			Else&#xD;
				Popup_Delete.Left=Point_6.Left+Shift_right&#xD;
				Popup_delete.Top=100				&#xD;
			End If	&#xD;
	Else If My_Apr.Cmd.Delete_Offset=7 Then&#xD;
			If Point_7.Left&lt;=400 Then&#xD;
				Popup_Delete.Left=Point_7.Left+Shift_left&#xD;
				Popup_delete.Top=100				&#xD;
			Else&#xD;
				Popup_Delete.Left=Point_7.Left+Shift_right&#xD;
				Popup_delete.Top=100				&#xD;
			End If	&#xD;
	Else If My_Apr.Cmd.Delete_Offset=8 Then&#xD;
			If Point_8.Left&lt;=400 Then&#xD;
				Popup_Delete.Left=Point_8.Left+Shift_left&#xD;
				Popup_delete.Top=100				&#xD;
			Else&#xD;
				Popup_Delete.Left=Point_8.Left+Shift_right&#xD;
				Popup_delete.Top=100				&#xD;
			End If			&#xD;
	Else If My_Apr.Cmd.Delete_Offset=9 Then&#xD;
			If Point_9.Left&lt;=400 Then&#xD;
				Popup_Delete.Left=Point_9.Left+Shift_left&#xD;
				Popup_delete.Top=100				&#xD;
			Else&#xD;
				Popup_Delete.Left=Point_9.Left+Shift_right&#xD;
				Popup_delete.Top=100				&#xD;
			End If	&#xD;
		End If	&#xD;
End Sub&#xD;
&#xD;
&#xD;
&#xD;
Sub update&#xD;
	&#xD;
	Dim MyscaleX As Single&#xD;
	Dim MyscaleY As Single&#xD;
		'the Graph is 1000 points large is the scale of x axis&#xD;
	MyscaleX=1000/(My_Apr.Param.Limit_X.Max-My_Apr.Param.Limit_X.Min)&#xD;
	&#xD;
	'the Graph is 500 point hight is the scale of y axis&#xD;
	MyscaleY=500/(My_Apr.Param.Limit_Y.Max-My_Apr.Param.Limit_Y.Min)&#xD;
	&#xD;
	&#xD;
LineY0.Left= My_Apr.Cmd.Setpoint* MyscaleX&#xD;
LineX0.Top=500- My_Apr.Value*MyscaleY&#xD;
End  Sub&#xD;
&#xD;
Sub Open_page_delete&#xD;
	&#xD;
	ShowPage("HMI_Apr_Delete_Value")&#xD;
	&#xD;
End Sub &#xD;
&#xD;
&#xD;
Sub Modify_point &#xD;
	My_Apr.Cmd.Modify_Val=True&#xD;
	My_Apr.Cmd.Show_popup_delete=False&#xD;
	ClosePage(_HMI_CurrentPage)&#xD;
End Sub&#xD;
&#xD;
Sub Cancel&#xD;
	My_APR.Cmd.Delete_Offset = -1&#xD;
	My_Apr.Cmd.Show_popup_delete=False&#xD;
	ClosePage(_HMI_CurrentPage)	&#xD;
End Sub&#xD;
&#xD;
Sub Delete_point&#xD;
	My_Apr.Cmd.Delete_Val=True&#xD;
	My_Apr.Cmd.Show_popup_delete=False&#xD;
	ClosePage(_HMI_CurrentPage)&#xD;
End Sub	&#xD;
&#xD;
Sub Close_popup&#xD;
	ClosePage(_HMI_CurrentPage)&#xD;
End  Sub </Text></CodeEditorModel>