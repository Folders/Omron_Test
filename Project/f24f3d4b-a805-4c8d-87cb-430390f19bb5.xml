<CodeEditorModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.DeviceHmi.CodeEditor.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><CodingLanguageName>VBNET</CodingLanguageName><HiddenFooter>&#xD;
End Class</HiddenFooter><HiddenHeader>Partial Public Class Users_Edit&#xD;
</HiddenHeader><SerialData i:type="a:string" xmlns:a="http://www.w3.org/2001/XMLSchema">[{"t":"Omron.Cxap.Modules.DeviceHmi.Variables.Core.Variable","a":"Omron.Cxap.Modules.DeviceHmi.Module, Version=1.0.0.0, Culture=neutral, PublicKeyToken=9f8cd6ce856ce25c","o":{"Address":"","Comment":"","RawComment":null,"DataTypeName":"THE_User","Edge":{"v":"NoEdge"},"ElementComments":null,"Group":{"v":"VAR_GLOBAL"},"IsAddedInOnlineEdit":false,"IsModifiedInitialValueInOnlineEdit":false,"Id":"c2886c4d-c811-4a67-9c1b-1680b4297fe4","InitialValue":"","IsConstant":false,"IsControllerVariable":false,"IsReadOnly":false,"IsReadOnlyNetwork":false,"Length":"","Name":"User","NamespaceId":"00000000-0000-0000-0000-000000000000","NetworkPublication":{"v":"NoPublication"},"Order":"","Retained":false,"UpdateRate":0,"MappedDeviceName":"","InitialValueArrayLength":"","ScalingConfigurationId":null,"Scaling":"None"}},{"t":"Omron.Cxap.Modules.DeviceHmi.Variables.Core.Variable","a":"Omron.Cxap.Modules.DeviceHmi.Module, Version=1.0.0.0, Culture=neutral, PublicKeyToken=9f8cd6ce856ce25c","o":{"Address":"","Comment":"1= user settings 0= add a user","RawComment":null,"DataTypeName":"Boolean","Edge":{"v":"NoEdge"},"ElementComments":null,"Group":{"v":"VAR_GLOBAL"},"IsAddedInOnlineEdit":false,"IsModifiedInitialValueInOnlineEdit":false,"Id":"454bc371-612f-498d-ad53-71762a41fb8f","InitialValue":"","IsConstant":false,"IsControllerVariable":false,"IsReadOnly":false,"IsReadOnlyNetwork":false,"Length":"","Name":"UserSettings","NamespaceId":"00000000-0000-0000-0000-000000000000","NetworkPublication":{"v":"NoPublication"},"Order":"","Retained":false,"UpdateRate":0,"MappedDeviceName":"","InitialValueArrayLength":"","ScalingConfigurationId":null,"Scaling":"None"}},{"t":"Omron.Cxap.Modules.DeviceHmi.Variables.Core.Variable","a":"Omron.Cxap.Modules.DeviceHmi.Module, Version=1.0.0.0, Culture=neutral, PublicKeyToken=9f8cd6ce856ce25c","o":{"Address":"","Comment":"","RawComment":null,"DataTypeName":"String","Edge":{"v":"NoEdge"},"ElementComments":null,"Group":{"v":"VAR_GLOBAL"},"IsAddedInOnlineEdit":false,"IsModifiedInitialValueInOnlineEdit":false,"Id":"c35e5512-ac09-49ee-8d21-1a528b74c06c","InitialValue":"","IsConstant":false,"IsControllerVariable":false,"IsReadOnly":false,"IsReadOnlyNetwork":false,"Length":"","Name":"UserSelectedCode","NamespaceId":"00000000-0000-0000-0000-000000000000","NetworkPublication":{"v":"NoPublication"},"Order":"","Retained":false,"UpdateRate":0,"MappedDeviceName":"","InitialValueArrayLength":"","ScalingConfigurationId":null,"Scaling":"None"}}]</SerialData><SerialDeviceHmiId i:type="a:string" xmlns:a="http://www.w3.org/2001/XMLSchema">[{"t":"System.String","a":"mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089","o":"8b864637-73ac-4429-8a1b-055ed8d4ef63"},{"t":"System.String","a":"mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089","o":"55aa2ac1-2239-47fe-b692-02dad282421d"}]</SerialDeviceHmiId><SerialScaleData i:type="a:string" xmlns:a="http://www.w3.org/2001/XMLSchema">[]</SerialScaleData><Text>Dim max As UShort&#xD;
Dim FirstName As String&#xD;
Dim LastName As String&#xD;
Private Dim UsersList() As String&#xD;
Private Dim i As Integer&#xD;
Private Dim PassChar As UShort=3&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Update pop-up for update an user (User.Arg.Edit = True) or create a new user (User.Arg.Edit = False)&#xD;
''' &lt;/summary&gt;&#xD;
Sub OnOpen&#xD;
	&#xD;
	'Reset the labels and error frames&#xD;
	Me.L_CodeNameError.Text=""&#xD;
	Me.L_PasswordError.Text=""&#xD;
	Me.P_ErrorCode.IsVisible=False&#xD;
	Me.P_ErrorPassword.IsVisible=False&#xD;
	Me.L_LabelError.IsVisible=False&#xD;
	Me.P_LabelError.IsVisible=False&#xD;
	&#xD;
	' Change header if it's for an edit or creating an user&#xD;
	If User.Arg.Edit = False Then&#xD;
		' New user&#xD;
		Me.L_Header.Text=GetResourceString("THE_User_Add")&#xD;
	Else&#xD;
		Me.L_Header.Text=GetResourceString("THE_User_Settings")&#xD;
	End If&#xD;
	&#xD;
End Sub&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' When a DataEdit is filled this subroutine is called to create user code&#xD;
''' &lt;/summary&gt;&#xD;
Sub OnChange&#xD;
	&#xD;
	' If both the First and Last names boxes are filled and the Code name box is empty, fill the Code Name with the 2 first letters uppercase&#xD;
	If User.Edit.FirstName &lt;&gt; "" And User.Edit.LastName &lt;&gt; ""  And User.Edit.Code = "" Then&#xD;
		User.Edit.Code = User.Edit.FirstName.Substring(0,2).ToUpper+User.Edit.LastName.Substring(0,2).ToUpper&#xD;
	End If&#xD;
	&#xD;
	If User.Edit.Code &lt;&gt;"" Then&#xD;
		User.Edit.Code=User.Edit.Code.ToUpper&#xD;
	End If&#xD;
	&#xD;
	'Reset the Variables to detect a difference in the following if statements&#xD;
	Dim ValOK, GlobalOk As Boolean = True&#xD;
	&#xD;
	'Reset the labels and error frames&#xD;
	L_CodeNameError.Text=""&#xD;
	L_PasswordError.Text=""&#xD;
	P_ErrorCode.IsVisible=False&#xD;
	P_ErrorPassword.IsVisible=False&#xD;
	&#xD;
	'The password must have at least 3 characters &#xD;
	If User.Edit.Password.Length &lt; PassChar Then&#xD;
		If User.Edit.Password = "" Then&#xD;
			GlobalOK = False&#xD;
		Else&#xD;
			ValOK= False&#xD;
			P_ErrorPassword.IsVisible=True&#xD;
			L_PasswordError.Text=CStr(PassChar)+" "+GetResourceString("THE_User_Err1")&#xD;
		End If&#xD;
	End If&#xD;
	&#xD;
	'The Code name must have 4 letters&#xD;
	If User.Edit.Code.Length &lt;&gt; 4 Then&#xD;
		If User.Edit.Code = "" Then&#xD;
			GlobalOK = False&#xD;
		Else&#xD;
			ValOK= False&#xD;
			Me.L_CodeNameError.Text=GetResourceString("THE_User_Err2")&#xD;
			Me.P_ErrorCode.IsVisible=True&#xD;
		End If&#xD;
	End If&#xD;
	&#xD;
	'The User Code Name must be unique&#xD;
	For Each userCode As String In GetRecipeNames("users")&#xD;
		If userCode=User.Edit.Code Then&#xD;
			If (User.Arg.Edit And userCode&lt;&gt;User.Edit.Code) Or (Not User.Arg.Edit) Then&#xD;
				ValOK=False&#xD;
				Me.P_ErrorCode.IsVisible=True&#xD;
				Me.L_CodeNameError.Text=GetResourceString("THE_User_Err3")&#xD;
				End If&#xD;
		End If&#xD;
	Next&#xD;
		&#xD;
	'The label is max 4 letters&#xD;
	If User.Edit.Label.Length &gt; 4 Then&#xD;
		If User.Edit.Password = "" Then&#xD;
			GlobalOK = False&#xD;
		Else&#xD;
			ValOK= False&#xD;
			Me.L_LabelError.Text=GetResourceString("THE_User_Err4")&#xD;
		End If&#xD;
	End If&#xD;
	&#xD;
	Me.L_LabelError.IsVisible = (User.Edit.Label.Length &gt; 4)&#xD;
	Me.P_LabelError.IsVisible = (User.Edit.Label.Length &gt; 4)&#xD;
	&#xD;
	'If all the conditions are passed, add the new user in the user's recipes&#xD;
	If ValOK Then&#xD;
		&#xD;
		'Save if user is THE or not&#xD;
		User.Edit.THE = (User.Edit.Level &gt;= 80)&#xD;
			&#xD;
		'If the subroutine is used as "UserSetting"&#xD;
		If User.Arg.Edit Then&#xD;
			DeleteRecipe("users",UserSelectedCode)&#xD;
		End If&#xD;
		&#xD;
		AddRecipe("users",User.Edit.Code)&#xD;
		ReadRecipeFromController("users",User.Edit.Code)&#xD;
		SaveRecipe("users",User.Edit.Code)&#xD;
		&#xD;
		' To implement?&#xD;
		'Call S_Users.Backup &#xD;
		ShowPage("Users_Main")&#xD;
	End If&#xD;
End Sub&#xD;
&#xD;
Private Sub _GenerateCodeName&#xD;
	&#xD;
End Sub&#xD;
&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Check every condition to create an user, and if it's OK, add/create an user.&#xD;
''' &lt;/summary&gt;&#xD;
Sub OnValidate&#xD;
	&#xD;
&#xD;
End Sub&#xD;
&#xD;
&#xD;
''' &lt;summary&gt;&#xD;
''' Open english keyboard to edit the label value&#xD;
''' &lt;/summary&gt;&#xD;
Sub Label_Edit&#xD;
	' Open english keyboard&#xD;
	EditVariable("UserManagement.Label",,,,,,,,,"English")&#xD;
End Sub&#xD;
</Text></CodeEditorModel>